<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xyznotes.h5.user.dao.UserMapper">

    <insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO users
      (password, email, phone, created_date, login_date, active, salt, role, openid, nickname, avatar, username)
    VALUES
      (#{password}, #{email}, #{phone}, #{createdDate}, #{loginDate}, #{active}, #{salt}, #{role}, #{openid}, #{nickname}, #{avatar}, #{username})
    </insert>

    <update id="updatePassword">
    UPDATE users
    SET password=#{param2}
    WHERE id=#{param1}
    </update>

    <update id="updateOpenid" parameterType="User">
        UPDATE users
        SET open_id=#{openid}
        WHERE id=#{id}
    </update>

    <update id="updateLoginDate" parameterType="User">
    UPDATE users
    SET login_date=#{loginDate}
    WHERE id=#{id}
    </update>

    <update id="updateInfo" parameterType="User">
    UPDATE users
    SET email=#{email}, phone=#{phone}, nickname=#{nickname}, avatar=#{avatar}, username=#{username}
    WHERE id=#{id}
    </update>

    <select id="findById" parameterType="Integer" resultType="User">
        SELECT
        users.id,
        password,
        email,
        created_date,
        login_date,
        active,
        nickname,
        username,
        salt,
        avatar,
        phone,
        role,
        openid
        FROM users
        WHERE users.id = #{id}
    </select>

    <select id="findByOpenid" parameterType="String" resultType="User">
        SELECT
        users.id,
        password,
        email,
        created_date,
        login_date,
        active,
        avatar,
        username,
        salt,
        nickname,
        phone,
        role,
        openid
        FROM users
        WHERE users.openid = #{openid}
    </select>

    <select id="findByEmail" parameterType="String" resultType="User">
        SELECT
        users.id,
        password,
        email,
        created_date as createdDate,
        login_date as loginDate,
        active,
        nickname,
        salt,
        username,
        phone,
        avatar,
        role
        FROM users
        WHERE users.email = #{email}
    </select>

    <select id="findByPhone" resultType="User">
        SELECT
        users.id,
        password,
        email,
        created_date as createdDate,
        login_date as loginDate,
        active,
        salt,
        username,
        avatar,
        nickname,
        phone,
        role
        FROM users
        WHERE users.phone = #{param1}
    </select>

    <select id="findResetToken" resultType="ResetToken">
    SELECT * FROM reset_token
    WHERE code=#{param1}
    </select>

    <update id="invalid" parameterType="ResetToken">
    UPDATE reset_token
    SET valid=0
    WHERE id=#{id}
    </update>

    <update id="changeStatus">
        UPDATE users
        SET active = #{param2}
        WHERE id=#{param1}
    </update>

    <insert id="saveResetToken" parameterType="ResetToken" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO reset_token (code, email, created_date, valid, salt)
    VALUES(#{code}, #{email}, #{createdDate}, 1, #{salt})
    </insert>

    <select id="list" parameterType="com.xyznotes.h5.common.Criteria" resultType="User">
        SELECT
        users.id,
        password,
        email,
        nickname,
        username,
        created_date,
        login_date,
        active,
        salt,
        avatar,
        phone,
        role
        FROM users
        <where>
            <if test="conditionMap.email!=null"> AND email LIKE concat('%', #{conditionMap.email},'%')</if>
            <if test="conditionMap.phone!=null">AND phone LIKE concat('%',#{conditionMap.phone},'%')</if>
        </where>
        <if test="orderName!=null">ORDER BY ${orderName} ${orderDir}</if>
        <if test="start != null and pageSize != null">LIMIT #{start},#{pageSize}</if>
    </select>

    <select id="count" parameterType="com.xyznotes.h5.common.Criteria" resultType="long">
        SELECT
        count(*)
        FROM users
        <where>
            <if test="conditionMap.email!=null"> AND email = #{conditionMap.email}</if>
            <if test="conditionMap.phone!=null">AND phone LIKE concat('%',#{conditionMap.phone},'%')</if>
        </where>
    </select>

    <delete id="delete" parameterType="User">
        DELETE FROM users
        WHERE id = #{id}
    </delete>
</mapper>
